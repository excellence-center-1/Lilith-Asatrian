{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HIn9gLzSx_KI"
      },
      "source": [
        "# Exercises"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "05IIieaQx_PL"
      },
      "source": [
        "1. Write a function called `rectangle` that takes two integers `m` and `n` as arguments and prints\n",
        "out an $m \\times n$ box consisting of asterisks. \n",
        "\n",
        "  Գրել `rectangle` անունով ֆունկցիա, որը ընդունում է երկու ամբողջ թիվ `m` ու `n`, և տպում է  $m \\times n$ չափսի ուղղանկյուն՝ կազմված աստղանիշերից։"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IjVw1urbx_Uj",
        "outputId": "184cff05-d830-429d-ec4e-6d4a4f3afbcc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "source": [
        "def rectangle(m, n):\n",
        "  print('*'*n)\n",
        "  for i in range(m-2):\n",
        "    print('*', ' '*(n-4), '*')\n",
        "  print(\"*\"*n)\n",
        "rectangle(5,6)"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "******\n",
            "*    *\n",
            "*    *\n",
            "*    *\n",
            "******\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1hNpHC_Zx_aD"
      },
      "source": [
        "2. Write a function called `sum_digits` that is given an integer `num` and returns the sum of the\n",
        "digits of num.\n",
        "\n",
        "  Գրել `sum_digits` անունով ֆունկցիա, որը տրված `num` ամբողջ թվի համար  վերադարձնում է այդ թվի թվանշանների գումարը։"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def sum_digits(num):\n",
        "  sum=0\n",
        "  while num/10:\n",
        "    sum+=num%10\n",
        "    num//=10\n",
        "  return sum\n",
        "sum_digits(1456)"
      ],
      "metadata": {
        "id": "rRo_yJlTS4vO",
        "outputId": "c63c304b-00d2-4516-9b24-4776d789b63f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "16"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    }
  ]
}